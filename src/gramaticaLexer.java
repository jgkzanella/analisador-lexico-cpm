// Generated from java-escape by ANTLR 4.11.1
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue"})
public class gramaticaLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.11.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		USE=1, TIPO=2, MAIN=3, DEF=4, IF=5, IFSE=6, ELSE=7, WHILE=8, RETURN=9, 
		SEP_RE=10, SEP_EX=11, AC=12, FC=13, AP=14, FP=15, ID=16, ATR=17, MAISMENOS=18, 
		MAISMAIS=19, MENOSMENOS=20, OP_ARIT=21, NUM=22, WS=23, STR=24, ACOL=25, 
		FCOL=26, OP_REL=27;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"LETRA", "DIGITO", "USE", "TIPO", "MAIN", "DEF", "IF", "IFSE", "ELSE", 
			"WHILE", "RETURN", "SEP_RE", "SEP_EX", "AC", "FC", "AP", "FP", "ID", 
			"ATR", "MAISMENOS", "MAISMAIS", "MENOSMENOS", "OP_ARIT", "NUM", "WS", 
			"STR", "ACOL", "FCOL", "OP_REL"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'use'", null, "'main'", "'def'", "'if'", "'ifse'", "'else'", "'while'", 
			"'return'", "'::'", "';'", "'{'", "'}'", "'('", "')'", null, "'='", "'+-'", 
			"'++'", "'--'", null, null, null, null, "'['", "']'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "USE", "TIPO", "MAIN", "DEF", "IF", "IFSE", "ELSE", "WHILE", "RETURN", 
			"SEP_RE", "SEP_EX", "AC", "FC", "AP", "FP", "ID", "ATR", "MAISMENOS", 
			"MAISMAIS", "MENOSMENOS", "OP_ARIT", "NUM", "WS", "STR", "ACOL", "FCOL", 
			"OP_REL"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public gramaticaLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "gramatica.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000\u001b\u00c4\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002"+
		"\u0001\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002"+
		"\u0004\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002"+
		"\u0007\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002"+
		"\u000b\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e"+
		"\u0002\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011"+
		"\u0002\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014"+
		"\u0002\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017"+
		"\u0002\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a"+
		"\u0002\u001b\u0007\u001b\u0002\u001c\u0007\u001c\u0001\u0000\u0001\u0000"+
		"\u0001\u0001\u0001\u0001\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002"+
		"\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003"+
		"\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003"+
		"\u0003\u0003P\b\u0003\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0004"+
		"\u0001\u0004\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0006"+
		"\u0001\u0006\u0001\u0006\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007"+
		"\u0001\u0007\u0001\b\u0001\b\u0001\b\u0001\b\u0001\b\u0001\t\u0001\t\u0001"+
		"\t\u0001\t\u0001\t\u0001\t\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001"+
		"\n\u0001\n\u0001\u000b\u0001\u000b\u0001\u000b\u0001\f\u0001\f\u0001\r"+
		"\u0001\r\u0001\u000e\u0001\u000e\u0001\u000f\u0001\u000f\u0001\u0010\u0001"+
		"\u0010\u0001\u0011\u0001\u0011\u0001\u0011\u0005\u0011\u0085\b\u0011\n"+
		"\u0011\f\u0011\u0088\t\u0011\u0001\u0012\u0001\u0012\u0001\u0013\u0001"+
		"\u0013\u0001\u0013\u0001\u0014\u0001\u0014\u0001\u0014\u0001\u0015\u0001"+
		"\u0015\u0001\u0015\u0001\u0016\u0001\u0016\u0001\u0017\u0004\u0017\u0098"+
		"\b\u0017\u000b\u0017\f\u0017\u0099\u0001\u0017\u0001\u0017\u0004\u0017"+
		"\u009e\b\u0017\u000b\u0017\f\u0017\u009f\u0003\u0017\u00a2\b\u0017\u0001"+
		"\u0018\u0005\u0018\u00a5\b\u0018\n\u0018\f\u0018\u00a8\t\u0018\u0001\u0018"+
		"\u0001\u0018\u0001\u0019\u0001\u0019\u0001\u0019\u0001\u0019\u0005\u0019"+
		"\u00b0\b\u0019\n\u0019\f\u0019\u00b3\t\u0019\u0001\u0019\u0001\u0019\u0001"+
		"\u001a\u0001\u001a\u0001\u001b\u0001\u001b\u0001\u001c\u0001\u001c\u0001"+
		"\u001c\u0001\u001c\u0001\u001c\u0001\u001c\u0001\u001c\u0001\u001c\u0003"+
		"\u001c\u00c3\b\u001c\u0000\u0000\u001d\u0001\u0000\u0003\u0000\u0005\u0001"+
		"\u0007\u0002\t\u0003\u000b\u0004\r\u0005\u000f\u0006\u0011\u0007\u0013"+
		"\b\u0015\t\u0017\n\u0019\u000b\u001b\f\u001d\r\u001f\u000e!\u000f#\u0010"+
		"%\u0011\'\u0012)\u0013+\u0014-\u0015/\u00161\u00173\u00185\u00197\u001a"+
		"9\u001b\u0001\u0000\u0006\u0002\u0000AZaz\u0001\u000009\u0004\u0000%%"+
		"*+--//\u0003\u0000\t\n\r\r  \u0002\u0000\"\"\\\\\u0004\u0000\n\n\r\r\""+
		"\"\\\\\u00cf\u0000\u0005\u0001\u0000\u0000\u0000\u0000\u0007\u0001\u0000"+
		"\u0000\u0000\u0000\t\u0001\u0000\u0000\u0000\u0000\u000b\u0001\u0000\u0000"+
		"\u0000\u0000\r\u0001\u0000\u0000\u0000\u0000\u000f\u0001\u0000\u0000\u0000"+
		"\u0000\u0011\u0001\u0000\u0000\u0000\u0000\u0013\u0001\u0000\u0000\u0000"+
		"\u0000\u0015\u0001\u0000\u0000\u0000\u0000\u0017\u0001\u0000\u0000\u0000"+
		"\u0000\u0019\u0001\u0000\u0000\u0000\u0000\u001b\u0001\u0000\u0000\u0000"+
		"\u0000\u001d\u0001\u0000\u0000\u0000\u0000\u001f\u0001\u0000\u0000\u0000"+
		"\u0000!\u0001\u0000\u0000\u0000\u0000#\u0001\u0000\u0000\u0000\u0000%"+
		"\u0001\u0000\u0000\u0000\u0000\'\u0001\u0000\u0000\u0000\u0000)\u0001"+
		"\u0000\u0000\u0000\u0000+\u0001\u0000\u0000\u0000\u0000-\u0001\u0000\u0000"+
		"\u0000\u0000/\u0001\u0000\u0000\u0000\u00001\u0001\u0000\u0000\u0000\u0000"+
		"3\u0001\u0000\u0000\u0000\u00005\u0001\u0000\u0000\u0000\u00007\u0001"+
		"\u0000\u0000\u0000\u00009\u0001\u0000\u0000\u0000\u0001;\u0001\u0000\u0000"+
		"\u0000\u0003=\u0001\u0000\u0000\u0000\u0005?\u0001\u0000\u0000\u0000\u0007"+
		"O\u0001\u0000\u0000\u0000\tQ\u0001\u0000\u0000\u0000\u000bV\u0001\u0000"+
		"\u0000\u0000\rZ\u0001\u0000\u0000\u0000\u000f]\u0001\u0000\u0000\u0000"+
		"\u0011b\u0001\u0000\u0000\u0000\u0013g\u0001\u0000\u0000\u0000\u0015m"+
		"\u0001\u0000\u0000\u0000\u0017t\u0001\u0000\u0000\u0000\u0019w\u0001\u0000"+
		"\u0000\u0000\u001by\u0001\u0000\u0000\u0000\u001d{\u0001\u0000\u0000\u0000"+
		"\u001f}\u0001\u0000\u0000\u0000!\u007f\u0001\u0000\u0000\u0000#\u0081"+
		"\u0001\u0000\u0000\u0000%\u0089\u0001\u0000\u0000\u0000\'\u008b\u0001"+
		"\u0000\u0000\u0000)\u008e\u0001\u0000\u0000\u0000+\u0091\u0001\u0000\u0000"+
		"\u0000-\u0094\u0001\u0000\u0000\u0000/\u0097\u0001\u0000\u0000\u00001"+
		"\u00a6\u0001\u0000\u0000\u00003\u00ab\u0001\u0000\u0000\u00005\u00b6\u0001"+
		"\u0000\u0000\u00007\u00b8\u0001\u0000\u0000\u00009\u00c2\u0001\u0000\u0000"+
		"\u0000;<\u0007\u0000\u0000\u0000<\u0002\u0001\u0000\u0000\u0000=>\u0007"+
		"\u0001\u0000\u0000>\u0004\u0001\u0000\u0000\u0000?@\u0005u\u0000\u0000"+
		"@A\u0005s\u0000\u0000AB\u0005e\u0000\u0000B\u0006\u0001\u0000\u0000\u0000"+
		"CD\u0005i\u0000\u0000DE\u0005n\u0000\u0000EP\u0005t\u0000\u0000FG\u0005"+
		"f\u0000\u0000GH\u0005l\u0000\u0000HI\u0005o\u0000\u0000IJ\u0005a\u0000"+
		"\u0000JP\u0005t\u0000\u0000KL\u0005v\u0000\u0000LM\u0005o\u0000\u0000"+
		"MN\u0005i\u0000\u0000NP\u0005d\u0000\u0000OC\u0001\u0000\u0000\u0000O"+
		"F\u0001\u0000\u0000\u0000OK\u0001\u0000\u0000\u0000P\b\u0001\u0000\u0000"+
		"\u0000QR\u0005m\u0000\u0000RS\u0005a\u0000\u0000ST\u0005i\u0000\u0000"+
		"TU\u0005n\u0000\u0000U\n\u0001\u0000\u0000\u0000VW\u0005d\u0000\u0000"+
		"WX\u0005e\u0000\u0000XY\u0005f\u0000\u0000Y\f\u0001\u0000\u0000\u0000"+
		"Z[\u0005i\u0000\u0000[\\\u0005f\u0000\u0000\\\u000e\u0001\u0000\u0000"+
		"\u0000]^\u0005i\u0000\u0000^_\u0005f\u0000\u0000_`\u0005s\u0000\u0000"+
		"`a\u0005e\u0000\u0000a\u0010\u0001\u0000\u0000\u0000bc\u0005e\u0000\u0000"+
		"cd\u0005l\u0000\u0000de\u0005s\u0000\u0000ef\u0005e\u0000\u0000f\u0012"+
		"\u0001\u0000\u0000\u0000gh\u0005w\u0000\u0000hi\u0005h\u0000\u0000ij\u0005"+
		"i\u0000\u0000jk\u0005l\u0000\u0000kl\u0005e\u0000\u0000l\u0014\u0001\u0000"+
		"\u0000\u0000mn\u0005r\u0000\u0000no\u0005e\u0000\u0000op\u0005t\u0000"+
		"\u0000pq\u0005u\u0000\u0000qr\u0005r\u0000\u0000rs\u0005n\u0000\u0000"+
		"s\u0016\u0001\u0000\u0000\u0000tu\u0005:\u0000\u0000uv\u0005:\u0000\u0000"+
		"v\u0018\u0001\u0000\u0000\u0000wx\u0005;\u0000\u0000x\u001a\u0001\u0000"+
		"\u0000\u0000yz\u0005{\u0000\u0000z\u001c\u0001\u0000\u0000\u0000{|\u0005"+
		"}\u0000\u0000|\u001e\u0001\u0000\u0000\u0000}~\u0005(\u0000\u0000~ \u0001"+
		"\u0000\u0000\u0000\u007f\u0080\u0005)\u0000\u0000\u0080\"\u0001\u0000"+
		"\u0000\u0000\u0081\u0086\u0003\u0001\u0000\u0000\u0082\u0085\u0003\u0003"+
		"\u0001\u0000\u0083\u0085\u0003\u0001\u0000\u0000\u0084\u0082\u0001\u0000"+
		"\u0000\u0000\u0084\u0083\u0001\u0000\u0000\u0000\u0085\u0088\u0001\u0000"+
		"\u0000\u0000\u0086\u0084\u0001\u0000\u0000\u0000\u0086\u0087\u0001\u0000"+
		"\u0000\u0000\u0087$\u0001\u0000\u0000\u0000\u0088\u0086\u0001\u0000\u0000"+
		"\u0000\u0089\u008a\u0005=\u0000\u0000\u008a&\u0001\u0000\u0000\u0000\u008b"+
		"\u008c\u0005+\u0000\u0000\u008c\u008d\u0005-\u0000\u0000\u008d(\u0001"+
		"\u0000\u0000\u0000\u008e\u008f\u0005+\u0000\u0000\u008f\u0090\u0005+\u0000"+
		"\u0000\u0090*\u0001\u0000\u0000\u0000\u0091\u0092\u0005-\u0000\u0000\u0092"+
		"\u0093\u0005-\u0000\u0000\u0093,\u0001\u0000\u0000\u0000\u0094\u0095\u0007"+
		"\u0002\u0000\u0000\u0095.\u0001\u0000\u0000\u0000\u0096\u0098\u0003\u0003"+
		"\u0001\u0000\u0097\u0096\u0001\u0000\u0000\u0000\u0098\u0099\u0001\u0000"+
		"\u0000\u0000\u0099\u0097\u0001\u0000\u0000\u0000\u0099\u009a\u0001\u0000"+
		"\u0000\u0000\u009a\u00a1\u0001\u0000\u0000\u0000\u009b\u009d\u0005.\u0000"+
		"\u0000\u009c\u009e\u0003\u0003\u0001\u0000\u009d\u009c\u0001\u0000\u0000"+
		"\u0000\u009e\u009f\u0001\u0000\u0000\u0000\u009f\u009d\u0001\u0000\u0000"+
		"\u0000\u009f\u00a0\u0001\u0000\u0000\u0000\u00a0\u00a2\u0001\u0000\u0000"+
		"\u0000\u00a1\u009b\u0001\u0000\u0000\u0000\u00a1\u00a2\u0001\u0000\u0000"+
		"\u0000\u00a20\u0001\u0000\u0000\u0000\u00a3\u00a5\u0007\u0003\u0000\u0000"+
		"\u00a4\u00a3\u0001\u0000\u0000\u0000\u00a5\u00a8\u0001\u0000\u0000\u0000"+
		"\u00a6\u00a4\u0001\u0000\u0000\u0000\u00a6\u00a7\u0001\u0000\u0000\u0000"+
		"\u00a7\u00a9\u0001\u0000\u0000\u0000\u00a8\u00a6\u0001\u0000\u0000\u0000"+
		"\u00a9\u00aa\u0006\u0018\u0000\u0000\u00aa2\u0001\u0000\u0000\u0000\u00ab"+
		"\u00b1\u0005\"\u0000\u0000\u00ac\u00ad\u0005\\\u0000\u0000\u00ad\u00b0"+
		"\u0007\u0004\u0000\u0000\u00ae\u00b0\b\u0005\u0000\u0000\u00af\u00ac\u0001"+
		"\u0000\u0000\u0000\u00af\u00ae\u0001\u0000\u0000\u0000\u00b0\u00b3\u0001"+
		"\u0000\u0000\u0000\u00b1\u00af\u0001\u0000\u0000\u0000\u00b1\u00b2\u0001"+
		"\u0000\u0000\u0000\u00b2\u00b4\u0001\u0000\u0000\u0000\u00b3\u00b1\u0001"+
		"\u0000\u0000\u0000\u00b4\u00b5\u0005\"\u0000\u0000\u00b54\u0001\u0000"+
		"\u0000\u0000\u00b6\u00b7\u0005[\u0000\u0000\u00b76\u0001\u0000\u0000\u0000"+
		"\u00b8\u00b9\u0005]\u0000\u0000\u00b98\u0001\u0000\u0000\u0000\u00ba\u00c3"+
		"\u0005<\u0000\u0000\u00bb\u00bc\u0005<\u0000\u0000\u00bc\u00c3\u0005="+
		"\u0000\u0000\u00bd\u00be\u0005>\u0000\u0000\u00be\u00c3\u0005=\u0000\u0000"+
		"\u00bf\u00c3\u0002=>\u0000\u00c0\u00c1\u0005!\u0000\u0000\u00c1\u00c3"+
		"\u0005=\u0000\u0000\u00c2\u00ba\u0001\u0000\u0000\u0000\u00c2\u00bb\u0001"+
		"\u0000\u0000\u0000\u00c2\u00bd\u0001\u0000\u0000\u0000\u00c2\u00bf\u0001"+
		"\u0000\u0000\u0000\u00c2\u00c0\u0001\u0000\u0000\u0000\u00c3:\u0001\u0000"+
		"\u0000\u0000\u000b\u0000O\u0084\u0086\u0099\u009f\u00a1\u00a6\u00af\u00b1"+
		"\u00c2\u0001\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}